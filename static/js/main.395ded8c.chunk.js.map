{"version":3,"sources":["app/scroll/page/Page.tsx","app/scroll/notepad/input/Input.tsx","app/scroll/notepad/Notepad.tsx","app/scroll/clock/Clock.tsx","app/scroll/Scroll.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Page","props","state","isMoved","translate","className","style","this","onPointerUp","endMove","bind","onPointerDown","startMove","onPointerMove","move","undefined","children","ev","movementY","setState","React","Component","Input","pusher","onSubmit","preventDefault","textField","currentTarget","firstChild","value","type","name","Notepad","textList","i","push","id","Math","random","text","pushText","map","textListItem","Clock","timerID","date","Date","setInterval","clearInterval","toLocaleTimeString","Scroll","page","App","scrollState","isReseated","lastPosition","direction","reset","newPosition","checkerScrolling","finisherScrolling","CHECK_INTERVAL","ANIMATION_INTERVAL","lastCheckedPosition","STEP","lastAnimationPosition","onScroll","scroll","scrollLeft","checkScrolling","el","finishScrolling","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.395ded8c.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\r\nimport './Page.scss';\r\n\r\nexport interface PageProps {\r\n  children?: any\r\n}\r\ninterface PageState {\r\n  children?: any\r\n  translate: number\r\n  isMoved: boolean\r\n}\r\n\r\nclass Page extends React.Component<PageProps, PageState> {\r\n  constructor(props: PageProps) {\r\n    super(props);\r\n    this.state = { isMoved: false, translate: 0 };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Page\"\r\n        style={{ '--verticalTranslate': this.state.translate } as CSSProperties}\r\n        onPointerUp={this.endMove.bind(this)}\r\n        onPointerDown={this.startMove.bind(this)}\r\n\r\n        onPointerMove={this.state.isMoved ? this.move.bind(this) : undefined}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n  // values\r\n  // methods\r\n  protected move(ev: React.PointerEvent<HTMLDivElement>) {\r\n    const translate = this.state.translate + ev.movementY\r\n    this.setState({ translate })\r\n  }\r\n  protected startMove(ev: React.PointerEvent<HTMLDivElement>) {\r\n    this.setState({ isMoved: true })\r\n  }\r\n  protected endMove(ev: React.PointerEvent<HTMLDivElement>) {\r\n    this.setState({ isMoved: false })\r\n  }\r\n}\r\n\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport './Input.scss'\r\ninterface InputProps{\r\n  pusher: (text: string) => void\r\n}\r\nfunction Input({ pusher }: InputProps) {\r\n  return (\r\n    <form className=\"Input\" onSubmit={ev => {\r\n      ev.preventDefault();\r\n      const textField = (ev.currentTarget as HTMLFormElement).firstChild as HTMLInputElement\r\n      if (textField && textField.value) {\r\n        pusher(textField.value);\r\n      }\r\n      textField.value = ''\r\n    }}>\r\n      <input className='Input__textField' type=\"text\" name=\"textField\" />\r\n      <button type=\"submit\">Добавить текст</button>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './Notepad.scss'\r\nimport Input from \"./input/Input\";\r\n\r\nclass Notepad extends React.Component<{}, { textList: { id: number, text: string }[] }> {\r\n  constructor(props?: any) {\r\n    super(props);\r\n    const textList: Notepad['state']['textList'] = []\r\n    for (let i = 1; i < 10; i++) {\r\n      textList.push({ id: Math.random(), text: `Сгенерированная строка ${i}` })\r\n    }\r\n    this.state = { textList };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Notepad\">\r\n        <Input pusher={this.pushText.bind(this) as Notepad['pushText']} />\r\n        <div className = 'Notepad__container_text_list'>\r\n          <div className='Notepad__text_list'>\r\n            {this.state.textList\r\n              .map(({ text, id }) => <span key={id}>{text}</span>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // values\r\n  // methods\r\n  protected pushText(text: string) {\r\n    const textListItem = {\r\n      text,\r\n      id: Math.random()\r\n    }\r\n    this.state.textList.push(textListItem)\r\n    this.setState(this.state)\r\n  }\r\n\r\n}\r\n\r\nexport default Notepad;\r\n","import React from 'react';\r\nimport './Clock.scss'\r\n\r\nclass Clock extends React.Component<{}, {date: Date}> {\r\n  constructor(props?: any) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.setState({ date: new Date() }), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.timerID) {\r\n      clearInterval(this.timerID);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='Clock'>\r\n        {this.state.date.toLocaleTimeString()}\r\n      </div>\r\n    );\r\n  }\r\n  // values\r\n  protected timerID?: NodeJS.Timeout\r\n}\r\n\r\nexport default Clock;\r\n","import React, { CSSProperties } from 'react';\r\nimport './Scroll.scss'\r\nimport Page from './page/Page';\r\nimport Notepad from './notepad/Notepad';\r\nimport Clock from './clock/Clock';\r\n\r\nexport interface ScrollProps{\r\n  page: 'first' | 'second'\r\n}\r\n\r\nfunction Scroll({ page }: ScrollProps) {\r\n  return (\r\n    <div className=\"Scroll\"\r\n      /* style={{ '--translate': page === 'second' ? -100 : 0 } as CSSProperties} */    >\r\n      <Page><Notepad/></Page>\r\n      <Page><Clock/></Page>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Scroll, { ScrollProps } from \"./scroll/Scroll\";\r\n\r\nexport interface AppState extends ScrollProps{\r\n  isMoved: boolean\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props?: any) {\r\n    super(props);\r\n    this.state = { page: 'first' , isMoved: false};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\"\r\n        onScroll={this.scroll.bind(this)}\r\n        // onPointerDown={this.pointerDown.bind(this)}\r\n        // onPointerUp={this.pointerUp.bind(this)}\r\n      >\r\n        <Scroll page={this.state.page} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // methods\r\n  // private pointerIsDown = false\r\n  // protected pointerDown(ev: React.PointerEvent<HTMLDivElement>) {\r\n  //   if (!ev.isPrimary || this.pointerIsDown) { return }\r\n  //   this.pointerIsDown = true\r\n  // }\r\n  // protected pointerUp(ev: React.PointerEvent<HTMLDivElement>) {\r\n  //   if (!this.pointerIsDown) { return }\r\n  //   this.pointerIsDown = false\r\n  // }\r\n\r\n  // scrolling\r\n  private readonly scrollState = {\r\n    isReseated: true,\r\n    lastPosition: 0,\r\n    direction: 0,\r\n    reset: function () {\r\n      this.isReseated = true\r\n      this.direction = 0\r\n    },\r\n    push: function (newPosition: number) {\r\n      if (this.isReseated) {\r\n        this.isReseated = false\r\n      } else {\r\n        this.direction += newPosition - this.lastPosition\r\n      }\r\n      this.lastPosition = newPosition\r\n    },\r\n  }\r\n  private checkerScrolling?: NodeJS.Timeout\r\n  private finisherScrolling?: NodeJS.Timeout\r\n  private readonly CHECK_INTERVAL = 500\r\n  private readonly ANIMATION_INTERVAL = 50\r\n  protected scroll(ev: React.UIEvent<HTMLDivElement, UIEvent>) {\r\n    const newPosition = ev.currentTarget.scrollLeft\r\n    if (newPosition == this.lastAnimationPosition) { return }\r\n    if (this.finisherScrolling) {\r\n      clearInterval(this.finisherScrolling)\r\n      this.finisherScrolling = undefined\r\n    }\r\n\r\n    if (newPosition != this.scrollState.lastPosition) {\r\n      this.scrollState.push(ev.currentTarget.scrollLeft)\r\n    }\r\n\r\n    clearInterval(this.checkerScrolling as any)\r\n    this.checkerScrolling = setInterval(this.checkScrolling\r\n      .bind(this, ev.currentTarget), this.CHECK_INTERVAL);\r\n  }\r\n\r\n  // detect stay scrolling\r\n  private lastCheckedPosition = -1\r\n  private checkScrolling(el: HTMLDivElement) {\r\n    if (this.scrollState.isReseated) { return }\r\n\r\n    const lastPosition = this.scrollState.lastPosition\r\n    if (this.lastCheckedPosition != lastPosition) {\r\n      this.lastCheckedPosition = lastPosition!\r\n      return\r\n    }\r\n\r\n    // поломано вычисление типов\r\n    clearInterval(this.checkerScrolling as any)\r\n    this.checkerScrolling = undefined\r\n    this.lastCheckedPosition = -1\r\n    clearInterval(this.finisherScrolling as any)\r\n    this.lastAnimationPosition = -1\r\n    // this.finisherScrolling не сбрасывается для блокировки\r\n\r\n    const direction = this.scrollState.direction >= 0 ? 1 : -1\r\n    this.scrollState.reset()\r\n    this.finisherScrolling = setInterval(this.finishScrolling\r\n      .bind(this, el, direction), this.ANIMATION_INTERVAL)\r\n  }\r\n\r\n  // finalization scrolling\r\n  private readonly STEP = 10\r\n  private lastAnimationPosition = -1\r\n  private finishScrolling(el: HTMLDivElement, direction: -1 | 1) {\r\n    el.scrollLeft += this.STEP * direction\r\n    const position = el.scrollLeft\r\n\r\n    if (position == this.lastAnimationPosition) {\r\n      clearInterval(this.finisherScrolling as any)\r\n      this.finisherScrolling = undefined\r\n      this.lastAnimationPosition = -1\r\n      return\r\n    }\r\n    // важно. т.к. их равенство маркер отсутсвия сторонних движений\r\n    // используется в эвенте скролла\r\n    this.lastAnimationPosition = position\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}