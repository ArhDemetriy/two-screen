{"version":3,"sources":["app/scroll/page/Page.tsx","app/scroll/notepad/input/Input.tsx","app/scroll/notepad/textItem/TextItem.tsx","app/scroll/notepad/Notepad.tsx","app/scroll/clock/Clock.tsx","app/scroll/Scroll.tsx","app/animationScrolling/scrollState/ScrollState.ts","app/animationScrolling/AnimationScrolling.ts","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Page","children","className","Input","pusher","onSubmit","ev","preventDefault","textField","currentTarget","firstChild","value","type","name","TextItem","props","STEP_DELAY","chars","maxLengthAnimation","Array","from","text","map","s","id","Math","random","char","length","state","charList","delay","this","el","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","style","round","React","Component","Notepad","textList","i","push","pushText","bind","textListItem","setState","Clock","timerID","date","Date","setInterval","clearInterval","toLocaleTimeString","Scroll","scrollState","lastPosition","direction","newPosition","AnimationScrolling","settings","CHECK_TIMEOUT","ANIMATION_INTERVAL","STEP","BASIS_VECTOR","checkerScrolling","finisherScrolling","lastAnimationPosition","checkInterval","animationInterval","step","orientation","scroll","stopAnimation","clearTimeout","ScrollState","setTimeout","checkScrolling","undefined","finishScrolling","position","ASSettings","App","onScroll","getHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.742bc490.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Page.scss';\r\n\r\nexport interface PageProps {\r\n  children?: any\r\n}\r\n\r\nfunction Page({ children }: PageProps) {\r\n  return (\r\n    <div className=\"Page\">{children}</div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport './Input.scss'\r\ninterface InputProps{\r\n  pusher: (text: string) => void\r\n}\r\nfunction Input({ pusher }: InputProps) {\r\n  return (\r\n    <form className=\"Input\" onSubmit={ev => {\r\n      ev.preventDefault();\r\n      const textField = (ev.currentTarget as HTMLFormElement).firstChild as HTMLInputElement\r\n      if (textField && textField.value) {\r\n        pusher(textField.value);\r\n      }\r\n      textField.value = ''\r\n    }}>\r\n      <input className='Input__textField' type=\"text\" name=\"textField\" />\r\n      <button type=\"submit\">Добавить текст</button>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { CSSProperties } from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport './TextItem.scss'\r\ninterface TextItemState{\r\n  charList: {\r\n    id: number,\r\n    char: string,\r\n  }[]\r\n}\r\n\r\nexport interface TextItemProps{\r\n  text: string\r\n}\r\n\r\nclass TextItem extends React.Component<TextItemProps, TextItemState> {\r\n  private readonly STEP_DELAY = 100\r\n  constructor(props: TextItemProps) {\r\n    super(props);\r\n    this.chars = Array.from(props.text)\r\n    .map(s => ({\r\n      id: Math.random(),\r\n      char: s,\r\n    }))\r\n    this.maxLengthAnimation = this.chars.length * this.STEP_DELAY * 1.5\r\n\r\n    this.state = { charList: this.chars}\r\n  }\r\n  render() {\r\n    let delay = 0\r\n    return (\r\n      <div className=\"TextItem\">{\r\n        this.state.charList.map(el => {\r\n          return (\r\n            <ReactCSSTransitionGroup\r\n              key={el.id}\r\n              transitionName=\"TextItem__char\"\r\n              transitionAppear={true}\r\n              transitionAppearTimeout={delay += this.STEP_DELAY}\r\n              transitionEnter={false}\r\n              transitionLeave={false}\r\n            >\r\n              <span\r\n                style={{\r\n                  '--animationLength': Math.round(Math\r\n                    .random() * this.maxLengthAnimation)\r\n                } as CSSProperties}\r\n                className={'TextItem__char'}\r\n                >\r\n                {el.char}\r\n              </span >\r\n            </ReactCSSTransitionGroup>\r\n          )\r\n        })\r\n      }</div>\r\n    );\r\n  }\r\n  // values\r\n  private readonly chars: TextItemState['charList']\r\n  private readonly maxLengthAnimation : number\r\n\r\n}\r\n\r\nexport default TextItem;\r\n","import React from 'react';\r\nimport './Notepad.scss'\r\nimport Input from \"./input/Input\";\r\nimport TextItem from \"./textItem/TextItem\";\r\n\r\nclass Notepad extends React.Component<{}, { textList: { id: number, text: string }[] }> {\r\n  constructor(props?: any) {\r\n    super(props);\r\n    const textList: Notepad['state']['textList'] = []\r\n    for (let i = 1; i <= 10; i++) {\r\n      textList.push({ id: Math.random(), text: `Сгенерированная строка ${i}` })\r\n    }\r\n    this.state = { textList };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Notepad\">\r\n        <Input pusher={this.pushText.bind(this) as Notepad['pushText']} />\r\n        <div className='Notepad__text_list'>\r\n          {this.state.textList\r\n            .map(({ text, id }) => <TextItem key={id} text={text}/>)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // methods\r\n  protected pushText(text: string) {\r\n    const textListItem = {\r\n      text,\r\n      id: Math.random()\r\n    }\r\n    this.state.textList.push(textListItem)\r\n    this.setState(this.state)\r\n  }\r\n}\r\n\r\nexport default Notepad;\r\n","import React from 'react';\r\nimport './Clock.scss'\r\n\r\nclass Clock extends React.Component<{}, {date: Date}> {\r\n  constructor(props?: any) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.setState({ date: new Date() }), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.timerID) {\r\n      clearInterval(this.timerID);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='Clock'>\r\n        <div className='Clock__huge_container'>\r\n          <span>{this.state.date.toLocaleTimeString()}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // values\r\n  protected timerID?: NodeJS.Timeout\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport './Scroll.scss'\r\nimport Page from './page/Page';\r\nimport Notepad from './notepad/Notepad';\r\nimport Clock from './clock/Clock';\r\n\r\nfunction Scroll() {\r\n  return (\r\n    <div className=\"Scroll\">\r\n      <Page><Notepad/></Page>\r\n      <Page><Clock/></Page>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","export default class scrollState{\r\n  constructor(public lastPosition: number) { }\r\n  direction = 0\r\n  push(newPosition: number) {\r\n    this.direction += newPosition - this.lastPosition\r\n    this.lastPosition = newPosition\r\n  }\r\n}\r\n","import ScrollState from \"./scrollState/ScrollState\";\r\n\r\nexport interface AnimationScrollingSettings{\r\n  checkInterval: number\r\n  animationInterval: number\r\n  step: number\r\n  orientation?: 'horizontal' | 'vertical'\r\n}\r\n\r\nexport default class AnimationScrolling {\r\n  constructor(settings: AnimationScrollingSettings) {\r\n    this.CHECK_TIMEOUT = settings.checkInterval || 500\r\n    this.ANIMATION_INTERVAL = settings.animationInterval || 50\r\n    this.STEP = settings.step || 10\r\n    if (settings.orientation == 'vertical') {\r\n      this.BASIS_VECTOR = 'scrollTop'\r\n    } else {\r\n      this.BASIS_VECTOR = 'scrollLeft'\r\n    }\r\n  }\r\n  getHandler() {\r\n    return this.scroll.bind(this)\r\n  }\r\n  // init values\r\n  private readonly CHECK_TIMEOUT\r\n  private readonly ANIMATION_INTERVAL\r\n  private readonly STEP\r\n  private readonly BASIS_VECTOR: 'scrollLeft' | 'scrollTop'\r\n\r\n  // monitor scrolling\r\n  private scrollState?: ScrollState\r\n\r\n  private scroll(ev: React.UIEvent<HTMLDivElement, UIEvent>) {\r\n    const newPosition = ev.currentTarget[this.BASIS_VECTOR]\r\n    if (newPosition == this.lastAnimationPosition) { return }\r\n\r\n    this.stopAnimation()\r\n    clearTimeout(this.checkerScrolling as any)\r\n\r\n    if (!this.scrollState) {\r\n      this.scrollState = new ScrollState(newPosition)\r\n    } else if (newPosition != this.scrollState.lastPosition) {\r\n      this.scrollState.push(newPosition)\r\n    }\r\n\r\n    this.checkerScrolling = setTimeout(this.checkScrolling\r\n      .bind(this, ev.currentTarget, newPosition), this.CHECK_TIMEOUT);\r\n  }\r\n  private checkerScrolling?: NodeJS.Timeout\r\n  private finisherScrolling?: NodeJS.Timeout\r\n\r\n  private checkScrolling(el: HTMLDivElement, lastPosition: number) {\r\n    if (!this.scrollState) { return }\r\n    if (lastPosition != el[this.BASIS_VECTOR]) { return }\r\n\r\n    this.stopAnimation()\r\n\r\n    const direction = this.scrollState.direction >= 0 ? 1 : -1\r\n    this.scrollState = undefined\r\n    this.finisherScrolling = setInterval(this.finishScrolling\r\n      .bind(this, el, direction), this.ANIMATION_INTERVAL)\r\n  }\r\n\r\n  // finalization scrolling\r\n  private lastAnimationPosition = -1\r\n  private finishScrolling(el: HTMLDivElement, direction: -1 | 1) {\r\n    el[this.BASIS_VECTOR] += this.STEP * direction\r\n    const position = el[this.BASIS_VECTOR]\r\n\r\n    if (position == this.lastAnimationPosition) {\r\n      this.stopAnimation()\r\n      return\r\n    }\r\n    // важно. т.к. их равенство маркер отсутсвия сторонних движений\r\n    // используется в эвенте скролла\r\n    this.lastAnimationPosition = position\r\n  }\r\n  private stopAnimation() {\r\n    clearInterval(this.finisherScrolling as any)\r\n    this.finisherScrolling = undefined\r\n    this.lastAnimationPosition = -1\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Scroll from \"./scroll/Scroll\";\r\nimport AnimationScrolling, {AnimationScrollingSettings} from \"./animationScrolling/AnimationScrolling\";\r\n\r\nconst ASSettings: AnimationScrollingSettings = {\r\n  checkInterval: 500,\r\n  animationInterval: 50,\r\n  step: 10,\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\"\r\n    onScroll={(new AnimationScrolling(ASSettings)).getHandler()}\r\n    >\r\n      <Scroll/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}